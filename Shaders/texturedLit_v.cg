// Per frame uniforms are the same for all entities in the frame
// These don't change between draw calls (only frame to frame))
struct PerFrameVertexUniforms
{
	row_major float4x4 u_viewMatrix;
	row_major float4x4 u_projectionMatrix;
};
PerFrameVertexUniforms u_perVFrame : BUFFER[0];

half4 main(
	float3 position : POSITION,
	float2 texCoord : TEXCOORD0,
	float3 normal : NORMAL,

	// Per draw call uniform
	uniform float4x4 u_modelMatrix, // Remains in "default" buffer (no semantic)

	out half2 pass_texCoord : TEXCOORD0_HALF,
	out half4 pass_surfaceNormal : TEXCOORD1_HALF,
	out half4 pass_worldPosition : TEXCOORD2_HALF) : POSITION
{
	half4 worldPosition = mul(u_modelMatrix, float4(position, 1.0));
	half4 clipPosition = mul(u_perVFrame.u_projectionMatrix, mul(u_perVFrame.u_viewMatrix, worldPosition));
	
	// Pass the texture coordinate to the fragment shader
	pass_texCoord = texCoord;

	//convert normal to worldspace and normalize it
	pass_surfaceNormal = half4(normalize(mul((float3x3) u_modelMatrix, normal)), 1.0);

	pass_worldPosition = worldPosition;

	return clipPosition;
}
